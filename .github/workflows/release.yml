# .github/workflows/release.yml

name: Release Flutter App

on:
  push:
    branches:
      - main
      - beta

jobs:
  # --- Job 1: 构建 Android APK ---
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        run: |
          echo "storeFile=upload-keystore.jks" > android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
          echo "storePassword=$STORE_PASSWORD" >> android/key.properties
          echo "$KEYSTORE_BASE64" | base64 --decode > android/upload-keystore.jks

      - name: Build Release APK (ARM64)
        run: flutter build apk --release --target-platform android-arm64 --split-per-abi

      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/app-release-arm64.apk

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release-arm64.apk

  # --- Job 2: 创建 Release 并上传所有产物 ---
  create-release:
    runs-on: ubuntu-latest
    needs: [build-android] # 依赖前两个任务
    permissions:
      contents: write # 授予 GITHUB_TOKEN 写权限以创建 Release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get all tags

      - name: Get latest tag and generate new version
        id: tag_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          clean_tag=${latest_tag#v}
          IFS='.' read -r -a version_parts <<< "$clean_tag"
          major=${version_parts[0]:-0}
          minor=${version_parts[1]:-0}
          patch=${version_parts[2]:-0}
          new_patch=$((patch + 1))
          new_version="v$major.$minor.$new_patch"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        id: changelog
        run: |
          echo "changelog_body<<EOF" >> $GITHUB_OUTPUT
          git log -1 --pretty=%B >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: artifacts/android

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_version.outputs.new_version }}
          name: Release ${{ steps.tag_version.outputs.new_version }}
          body: ${{ steps.changelog.outputs.changelog_body }}
          files: |
            artifacts/android/app-release-arm64.apk